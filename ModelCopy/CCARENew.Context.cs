//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelCopy
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CCAREEntities : DbContext
    {
        public CCAREEntities()
            : base("name=CCAREEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LeadView> LeadViews { get; set; }
        public virtual DbSet<ContactView> ContactViews { get; set; }
        public virtual DbSet<ActivityView> ActivityViews { get; set; }
        public virtual DbSet<SMAcitivityPointer_ActivityType> SMAcitivityPointer_ActivityType { get; set; }
    
        public virtual int Lead_Insert(Nullable<System.Guid> leadID, string topic, Nullable<System.Guid> contactID, Nullable<int> customerTypeCode, string salutation, Nullable<int> genderCode, string fullName, Nullable<System.DateTime> birthDate, string mobilePhone, string telephone, string fax, string eMailAddress, string jobTitle, string firstname, string lastname, string address, string city, string country, string company, Nullable<System.Guid> accountID, Nullable<System.Guid> campaignID, Nullable<System.Guid> productID, Nullable<System.Guid> businessUnitID, Nullable<System.Guid> ownerID, Nullable<System.Guid> modifiedBy, ObjectParameter retVal, ObjectParameter message)
        {
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(System.Guid));
    
            var topicParameter = topic != null ?
                new ObjectParameter("Topic", topic) :
                new ObjectParameter("Topic", typeof(string));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var customerTypeCodeParameter = customerTypeCode.HasValue ?
                new ObjectParameter("CustomerTypeCode", customerTypeCode) :
                new ObjectParameter("CustomerTypeCode", typeof(int));
    
            var salutationParameter = salutation != null ?
                new ObjectParameter("Salutation", salutation) :
                new ObjectParameter("Salutation", typeof(string));
    
            var genderCodeParameter = genderCode.HasValue ?
                new ObjectParameter("GenderCode", genderCode) :
                new ObjectParameter("GenderCode", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var eMailAddressParameter = eMailAddress != null ?
                new ObjectParameter("EMailAddress", eMailAddress) :
                new ObjectParameter("EMailAddress", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(System.Guid));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(System.Guid));
    
            var businessUnitIDParameter = businessUnitID.HasValue ?
                new ObjectParameter("BusinessUnitID", businessUnitID) :
                new ObjectParameter("BusinessUnitID", typeof(System.Guid));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(System.Guid));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Lead_Insert", leadIDParameter, topicParameter, contactIDParameter, customerTypeCodeParameter, salutationParameter, genderCodeParameter, fullNameParameter, birthDateParameter, mobilePhoneParameter, telephoneParameter, faxParameter, eMailAddressParameter, jobTitleParameter, firstnameParameter, lastnameParameter, addressParameter, cityParameter, countryParameter, companyParameter, accountIDParameter, campaignIDParameter, productIDParameter, businessUnitIDParameter, ownerIDParameter, modifiedByParameter, retVal, message);
        }
    
        public virtual int Contact_Insert(Nullable<System.Guid> contactID, Nullable<int> customerTypeCode, string salutation, Nullable<int> genderCode, string fullName, Nullable<System.DateTime> birthDate, string mobilePhone, string telephone1, string telephone2, string fax, string eMailAddress1, Nullable<System.Guid> businessUnit, Nullable<System.Guid> modifiedBy, ObjectParameter retVal, ObjectParameter message)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var customerTypeCodeParameter = customerTypeCode.HasValue ?
                new ObjectParameter("CustomerTypeCode", customerTypeCode) :
                new ObjectParameter("CustomerTypeCode", typeof(int));
    
            var salutationParameter = salutation != null ?
                new ObjectParameter("Salutation", salutation) :
                new ObjectParameter("Salutation", typeof(string));
    
            var genderCodeParameter = genderCode.HasValue ?
                new ObjectParameter("GenderCode", genderCode) :
                new ObjectParameter("GenderCode", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var telephone1Parameter = telephone1 != null ?
                new ObjectParameter("Telephone1", telephone1) :
                new ObjectParameter("Telephone1", typeof(string));
    
            var telephone2Parameter = telephone2 != null ?
                new ObjectParameter("Telephone2", telephone2) :
                new ObjectParameter("Telephone2", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var eMailAddress1Parameter = eMailAddress1 != null ?
                new ObjectParameter("EMailAddress1", eMailAddress1) :
                new ObjectParameter("EMailAddress1", typeof(string));
    
            var businessUnitParameter = businessUnit.HasValue ?
                new ObjectParameter("BusinessUnit", businessUnit) :
                new ObjectParameter("BusinessUnit", typeof(System.Guid));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Contact_Insert", contactIDParameter, customerTypeCodeParameter, salutationParameter, genderCodeParameter, fullNameParameter, birthDateParameter, mobilePhoneParameter, telephone1Parameter, telephone2Parameter, faxParameter, eMailAddress1Parameter, businessUnitParameter, modifiedByParameter, retVal, message);
        }
    }
}
